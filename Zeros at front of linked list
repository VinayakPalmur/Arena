/*
class Node{
    int data;
    Node next;
    Node(int d){
        data=d;
        next=null;
    }
}
*/
static public Node moveZeroes(Node head)
{
      if (head == null)
            return null;
         
        // Traverse the list from second node.
        Node temp = (head).next, prev = head;
        while (temp != null)
        {
         
            // If current node is 0, move to
            // beginning of linked list
            if (temp.data == 0)
            {
         
                // Disconnect node from its
                // current position
                Node curr = temp;
                temp = temp.next;
                prev.next = temp;
             
                // Move to beginning
                curr.next = (head);
                head = curr;
            }
         
            // For non-zero values
            else
            {
                prev = temp;
                temp = temp.next;
            }
             
        }
        return head;
}
